/**
 * LacusSoft :: cpf-gen v1.2.0
 *
 * @author Julio L. Muller.
 * @license MIT - 2020-2021
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).cpfGen=n()}(this,(function(){"use strict";
/**
     * num-only v1.1.0
     *
     * @author Julio L. Muller.
     * @license MIT - 2020-2021
     */var e=function(e){return String(e).replace(/\D/g,"")};function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r={},t="".replace,o=/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g,i=/[&<>'"]/g,a={"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"},u=function(e){return a[e]};r.escape=function(e){return t.call(e,i,u)};var c={"&amp;":"&","&#38;":"&","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&apos;":"'","&#39;":"'","&quot;":'"',"&#34;":'"'},f=function(e){return c[e]};r.unescape=function(e){return t.call(e,o,f)};var d=function(e){return function(e){return!!e&&"object"===n(e)}(e)&&!function(e){var n=Object.prototype.toString.call(e);return"[object RegExp]"===n||"[object Date]"===n||function(e){return e.$$typeof===l}(e)}(e)};var l="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function s(e,n){return!1!==n.clone&&n.isMergeableObject(e)?h((r=e,Array.isArray(r)?[]:{}),e,n):e;var r}function p(e,n,r){return e.concat(n).map((function(e){return s(e,r)}))}function y(e){return Object.keys(e).concat(function(e){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter((function(n){return e.propertyIsEnumerable(n)})):[]}(e))}function b(e,n){try{return n in e}catch(e){return!1}}function g(e,n,r){var t={};return r.isMergeableObject(e)&&y(e).forEach((function(n){t[n]=s(e[n],r)})),y(n).forEach((function(o){(function(e,n){return b(e,n)&&!(Object.hasOwnProperty.call(e,n)&&Object.propertyIsEnumerable.call(e,n))})(e,o)||(b(e,o)&&r.isMergeableObject(n[o])?t[o]=function(e,n){if(!n.customMerge)return h;var r=n.customMerge(e);return"function"==typeof r?r:h}(o,r)(e[o],n[o],r):t[o]=s(n[o],r))})),t}function h(e,n,r){(r=r||{}).arrayMerge=r.arrayMerge||p,r.isMergeableObject=r.isMergeableObject||d,r.cloneUnlessOtherwiseSpecified=s;var t=Array.isArray(n);return t===Array.isArray(e)?t?r.arrayMerge(e,n,r):g(e,n,r):s(n,r)}h.all=function(e,n){if(!Array.isArray(e))throw new Error("first argument should be an array");return e.reduce((function(e,r){return h(e,r,n)}),{})};var m=h,v=r,j=m;function w(e){return e&&"object"===n(e)&&"default"in e?e:{default:e}}var O=w(e),R=w(j),S={delimiters:{dot:".",dash:"-"},hiddenRange:{start:3,end:10},onFail:function(e){return e},hiddenKey:"*",hidden:!1,escape:!1};var E=function(e,n){var r=O.default(e).split(""),t=function(e){void 0===e&&(e={});var n=R.default(S,e);if(n.hidden){if(isNaN(n.hiddenRange.start)||n.hiddenRange.start<0||n.hiddenRange.start>10)throw new TypeError('Option "hiddenRange.start" must be a number between 0 and 10.');if(isNaN(n.hiddenRange.end)||n.hiddenRange.end<0||n.hiddenRange.end>10)throw new TypeError('Option "hiddenRange.end" must be a number between 0 and 10.');if(n.hiddenRange.start>n.hiddenRange.end){var r=n.hiddenRange.start;n.hiddenRange.start=n.hiddenRange.end,n.hiddenRange.end=r}}if("function"!=typeof n.onFail)throw new TypeError('The option "onFail" must be a callback function.');return n}(n);if(11!==r.length){var o=new Error('Parameter "'+e+'" does not contain 11 digits.');return t.onFail(e,o)}if(t.hidden)for(var i=t.hiddenRange.start;i<=t.hiddenRange.end;i++)r[i]=t.hiddenKey;r.splice(9,0,t.delimiters.dash),r.splice(6,0,t.delimiters.dot),r.splice(3,0,t.delimiters.dot);var a=r.join("");return t.escape?v.escape(a):a},M={format:!1,prefix:""};return function(n){var r,t=(void 0===(r=n)&&(r={}),m(M,r)),o=e(t.prefix),i=o.length;if(i<0||i>9)throw new Error('Option "prefix" must be a string containing between 1 and 9 digits.');var a=o.split("").map(Number).concat(function(e){for(var n=[];n.length<e;){var r=10*Math.random(),t=Math.floor(r);n.push(t)}return n}(9-i));return[9,10].forEach((function(e){for(var n=e+1,r=0,t=0;t<e;t++,n--)r+=a[t]*n;var o=11-r%11;a.push(o>9?0:o)})),t.format?E(a.join("")):a.join("")}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
